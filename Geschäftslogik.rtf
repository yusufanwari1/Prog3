{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Gesch\'e4ftslogik\
Erstellen Sie eine Gesch\'e4ftslogik zur Verwaltung eines Lagers mit begrenzter\
Kapazit\'e4t f\'fcr Frachtst\'fccke. Die m\'f6glichen Inhalte sind bereits als Interfaces im\
module contract im Projekt belegProg3 definiert. Au\'dferdem sollen auch die\
Kund*innen bzw. Besitzer*innen verwaltet werden.\
Die Gesch\'e4ftslogik muss folgende Funktionalit\'e4t realisieren:\
\'95 Anlegen von Kund*innen; dabei muss sichergestellt sein, dass kein Name\
mehr als einmal vorkommt\
\'95 Einf\'fcgen von Frachtst\'fccken:\
o unterst\'fctzt werden alle Typen die sowohl von Cargo als auch\
Storable ableiten\
o es ist zu pr\'fcfen, dass die Gesamtkapazit\'e4t nicht \'fcberschritten wird\
o es ist zu pr\'fcfen, dass das Frachtst\'fcck zu einer bereits existierenden\
Kund*in geh\'f6rt, ansonsten wird es nicht eingef\'fcgt\
o beim Einf\'fcgen wird ein Platz vergeben (storageLocation); zu\
keinem Zeitpunkt k\'f6nnen mehrere Frachtst\'fccke innerhalb des Lagers\
den gleichen Platz haben\
o es wird ein Einf\'fcgedatum vergeben\
\'95 Abruf aller Kund*innen mit der Anzahl der ihrer Frachtst\'fccke\
\'95 Abruf eingelagerter Frachtst\'fccke, wird ein Typ (Klassenname) angegeben\
werden nur Frachtst\'fccke von diesem Typ aufgelistet\
\'95 Abruf aller vorhandenen bzw. nicht vorhandenen Gefahrenstoffe (hazards)\
im Lager\
\'95 Setzen des Datums der letzten \'dcberpr\'fcfung (lastInspectionDate)\
\'95 L\'f6schen einer Kund*in\
\'95 Entfernen eines Frachtst\'fccks}